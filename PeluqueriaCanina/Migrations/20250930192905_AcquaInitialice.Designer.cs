// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PeluqueriaCanina.Data;

#nullable disable

namespace PeluqueriaCanina.Migrations
{
    [DbContext(typeof(ContextoAcqua))]
    [Migration("20250930192905_AcquaInitialice")]
    partial class AcquaInitialice
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PeluqueriaCanina.Models.ClasesDeAdministrador.Servicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("Duracion")
                        .HasColumnType("time");

                    b.Property<string>("NombreDelServicio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Servicios");
                });

            modelBuilder.Entity("PeluqueriaCanina.Models.ClasesDeCliente.Mascota", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaDeNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Peso")
                        .HasColumnType("float");

                    b.Property<string>("Raza")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TurnoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Mascotas");
                });

            modelBuilder.Entity("PeluqueriaCanina.Models.ClasesDePeluquero.Jornada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("Dia")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("HoraDeFin")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("HoraDeInicio")
                        .HasColumnType("time");

                    b.Property<int>("PeluqueroId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PeluqueroId");

                    b.ToTable("Jornadas");
                });

            modelBuilder.Entity("PeluqueriaCanina.Models.ClasesDeTurno.Turno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan>("Duracion")
                        .HasColumnType("time");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("MascotaId")
                        .HasColumnType("int");

                    b.Property<int>("PeluqueroId")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ServicioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MascotaId")
                        .IsUnique();

                    b.HasIndex("PeluqueroId");

                    b.HasIndex("ServicioId");

                    b.ToTable("Turnos");
                });

            modelBuilder.Entity("PeluqueriaCanina.Models.Users.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContraseñaHasheada")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<DateTime>("FechaDeNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Personas");

                    b.HasDiscriminator().HasValue("Persona");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("PeluqueriaCanina.Models.Users.Administrador", b =>
                {
                    b.HasBaseType("PeluqueriaCanina.Models.Users.Persona");

                    b.HasIndex("Mail")
                        .IsUnique();

                    b.HasDiscriminator().HasValue("Administrador");
                });

            modelBuilder.Entity("PeluqueriaCanina.Models.Users.Cliente", b =>
                {
                    b.HasBaseType("PeluqueriaCanina.Models.Users.Persona");

                    b.HasIndex("Mail")
                        .IsUnique();

                    b.HasDiscriminator().HasValue("Cliente");
                });

            modelBuilder.Entity("PeluqueriaCanina.Models.Users.Peluquero", b =>
                {
                    b.HasBaseType("PeluqueriaCanina.Models.Users.Persona");

                    b.HasIndex("Mail")
                        .IsUnique();

                    b.HasDiscriminator().HasValue("Peluquero");
                });

            modelBuilder.Entity("PeluqueriaCanina.Models.ClasesDeCliente.Mascota", b =>
                {
                    b.HasOne("PeluqueriaCanina.Models.Users.Cliente", "Cliente")
                        .WithMany("Mascotas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("PeluqueriaCanina.Models.ClasesDePeluquero.Jornada", b =>
                {
                    b.HasOne("PeluqueriaCanina.Models.Users.Peluquero", "Peluquero")
                        .WithMany("Jornadas")
                        .HasForeignKey("PeluqueroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Peluquero");
                });

            modelBuilder.Entity("PeluqueriaCanina.Models.ClasesDeTurno.Turno", b =>
                {
                    b.HasOne("PeluqueriaCanina.Models.ClasesDeCliente.Mascota", "Mascota")
                        .WithOne("Turno")
                        .HasForeignKey("PeluqueriaCanina.Models.ClasesDeTurno.Turno", "MascotaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PeluqueriaCanina.Models.Users.Peluquero", "Peluquero")
                        .WithMany("Turnos")
                        .HasForeignKey("PeluqueroId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PeluqueriaCanina.Models.ClasesDeAdministrador.Servicio", "Servicio")
                        .WithMany()
                        .HasForeignKey("ServicioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Mascota");

                    b.Navigation("Peluquero");

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("PeluqueriaCanina.Models.ClasesDeCliente.Mascota", b =>
                {
                    b.Navigation("Turno");
                });

            modelBuilder.Entity("PeluqueriaCanina.Models.Users.Cliente", b =>
                {
                    b.Navigation("Mascotas");
                });

            modelBuilder.Entity("PeluqueriaCanina.Models.Users.Peluquero", b =>
                {
                    b.Navigation("Jornadas");

                    b.Navigation("Turnos");
                });
#pragma warning restore 612, 618
        }
    }
}
